# The enricher should parse the deployments found on the original graph and generate a Namespace object,
# containing the name of the graph and the services found earlier.
kind: Namespace
apiVersion: v1
metadata:
  # If user did not specify this in the original graph, then this is generated by the enricher
  name: my-graph
  # Labels for the namespace are not that important.
  labels:
    name: my-graph
  annotations:
    # This list is important for now, as it specifies how many services are inside them.
    # This tells the astrid-kube, present inside kubernetes' cluster, how much it should wait
    # before considering this graph as fully running.
    # astrid.io is the prefix, the name after the slash is the name of the deployment inside this graph.
    astrid.io/nginx: deployment
    astrid.io/apache: deployment
---
# The enricher will then add the services for the deployments.
# It's important that the namespace is the same as provided above.
# clusterIP and nodePort should be omitted or left empty, so that kubernetes is in charge of assigning it
# and thus avoid any conflicts.
# Naming of the port is not relevant but strongly encouraged to keep them like this in order to improve clearness.
# Naming of the service can be different but it is very useful to keep the same name as the deployment they apply to.
# Labels can be unprefixed or prefixed with astrid.io. As of now, there should be no differences.
# Selector should contain the same labels contained in the deployment they apply, under template.metadata.labels.
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: my-graph
  labels:
    app: nginx
    # astrid.io/app: nginx <- alternative, if we want to keep it clearer.
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort:
    name: nginx-app-port
  - port: 9000
    targetPort: 9000
    nodePort:
    name: nginx-ambassador-port
  clusterIP:
  selector:
    app: nginx
    # astrid.io/app: nginx <- alternative, if we want to keep it clearer.
---
apiVersion: v1
kind: Service
metadata:
  name: apache
  namespace: my-graph
  labels:
    app: apache
    # astrid.io/app: apache <- alternative, if we want to keep it clearer.
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort:
    name: apache-app-port
  - port: 9000
    targetPort: 9000
    nodePort:
    name: apache-ambassador-port
  clusterIP:
  selector:
    app: apache
    # astrid.io/app: apache <- alternative, if we want to keep it clearer.
---
# The enricher will then take the deployments and append polycubed in containers list and the mounted volumes needed by it
# The original labels can be kept as they are or can be prefixed like astrid.io/key: value in order to reflect the fact
# that they are relevant to astrid only.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: my-graph
spec:
  selector:
    matchLabels:
      app: nginx
      # astrid.io/app: nginx <- alternative, if we want to keep things clearer. (this may also just be appended)
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
        astrid.io/deployment: nginx
        astrid.io/service: nginx
        # astrid.io/app: nginx <- alternative, if we want to keep things clearer. (this may also just be appended)
    spec:
      containers:
      - name: nginx
        image: nginx:1.7.9
        ports:
        - containerPort: 80
      # polycubed should be injected exactly as it is
      - name: polycubed
        image: k8sfirewall/firewall:astrid
        command: ["polycubed", "--loglevel=DEBUG", "--addr=0.0.0.0", "--logfile=/host/var/log/pcn_k8s"]
        volumeMounts:
        - name: lib-modules
          mountPath: /lib/modules
        - name: usr-src
          mountPath: /usr/src
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: var-log
          mountPath: /host/var/log
        securityContext:
          privileged: true
        ports:
          - name: polycubed
            containerPort: 9000
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: usr-src
        hostPath:
          path: /usr/src
      - name: cni-path
        hostPath:
          path: /opt/cni/bin
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
      - name: var-log
        hostPath:
          path: /var/log
      - name: netns
        hostPath:
          path: /var/run/netns
      - name: proc
        hostPath:
          path: /proc/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache
  namespace: my-graph
spec:
  selector:
    matchLabels:
      app: apache
      # astrid.io/app: apache <- alternative, if we want to keep things clearer. (this may also just be appended)
  replicas: 1
  template:
    metadata:
      labels:
        app: apache
        astrid.io/deployment: apache
        astrid.io/service: apache
        # astrid.io/app: apache <- alternative, if we want to keep things clearer. (this may also just be appended)
    spec:
      containers:
      - name: apache
        image: httpd
        ports:
        - containerPort: 80
      - name: polycubed
        image: k8sfirewall/firewall:astrid
        command: ["polycubed", "--loglevel=DEBUG", "--addr=0.0.0.0", "--logfile=/host/var/log/pcn_k8s"]
        volumeMounts:
        - name: lib-modules
          mountPath: /lib/modules
        - name: usr-src
          mountPath: /usr/src
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: var-log
          mountPath: /host/var/log
        securityContext:
          privileged: true
        ports:
          - name: polycubed
            containerPort: 9000
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: usr-src
        hostPath:
          path: /usr/src
      - name: cni-path
        hostPath:
          path: /opt/cni/bin
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
      - name: var-log
        hostPath:
          path: /var/log
      - name: netns
        hostPath:
          path: /var/run/netns
      - name: proc
        hostPath:
          path: /proc/