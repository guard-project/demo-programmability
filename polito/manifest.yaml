kind: Namespace
apiVersion: v1
metadata:
  name: mygraph
  labels:
    name: mygraph
  annotations:
    guard.io/nginx: deployment
    guard.io/nodejs: deployment
    guard.io/apache: deployment
    guard.io/mysql: deployment
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: mygraph
  labels:
    app: nginx
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
    nodePort:
    name: nginx-app-80-port
  - port: 9000
    targetPort: 9000
    nodePort:
    name: nginx-ambassador-port
  clusterIP:
  selector:
    app: nginx
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: mygraph
  labels:
    app: mysql
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
    nodePort:
    name: mysql-app-80-port
  - port: 9000
    targetPort: 9000
    nodePort:
    name: mysql-ambassador-port
  clusterIP:
  selector:
    app: mysql
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs
  namespace: mygraph
  labels:
    app: nodejs
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
    nodePort:
    name: nodejs-app-port
  - port: 9000
    targetPort: 9000
    nodePort:
    name: nodejs-ambassador-port
  clusterIP:
  selector:
    app: nodejs
---
apiVersion: v1
kind: Service
metadata:
  name: apache
  namespace: mygraph
  labels:
    app: apache
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
    nodePort:
    name: apache-app-port
  - port: 9000
    targetPort: 9000
    nodePort:
    name: apache-ambassador-port
  clusterIP:
  selector:
    app: apache
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: mygraph
  annotations:
    guard.io/security-components: "[\"firewall\"]"
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: custom-service
        image: k8sfirewall/custom-service:new
        env:
        - name: APP_NAME
          value: "nginx"
        - name: FONT_SIZE
          value: "regular"
        ports:
        - containerPort: 80
      - name: polycubed
        image: polycubenetwork/polycube:latest
        command: ["polycubed", "--loglevel=DEBUG", "--addr=0.0.0.0", "--logfile=/host/var/log/pcn_k8s"]
        volumeMounts:
        - name: lib-modules
          mountPath: /lib/modules
        - name: usr-src
          mountPath: /usr/src
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: var-log
          mountPath: /host/var/log
        securityContext:
          privileged: true
        ports:
          - name: polycubed
            containerPort: 9000
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: usr-src
        hostPath:
          path: /usr/src
      - name: cni-path
        hostPath:
          path: /opt/cni/bin
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
      - name: var-log
        hostPath:
          path: /var/log
      - name: netns
        hostPath:
          path: /var/run/netns
      - name: proc
        hostPath:
          path: /proc/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: mygraph
  annotations:
    guard.io/security-components: "[\"firewall\"]"
spec:
  selector:
    matchLabels:
      app: mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: custom-service
        image: k8sfirewall/custom-service:new
        env:
        - name: APP_NAME
          value: "mysql"
        - name: FONT_SIZE
          value: "regular"
        ports:
        - containerPort: 80
      - name: polycubed
        image: polycubenetwork/polycube:latest
        command: ["polycubed", "--loglevel=DEBUG", "--addr=0.0.0.0", "--logfile=/host/var/log/pcn_k8s"]
        volumeMounts:
        - name: lib-modules
          mountPath: /lib/modules
        - name: usr-src
          mountPath: /usr/src
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: var-log
          mountPath: /host/var/log
        securityContext:
          privileged: true
        ports:
          - name: polycubed
            containerPort: 9000
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: usr-src
        hostPath:
          path: /usr/src
      - name: cni-path
        hostPath:
          path: /opt/cni/bin
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
      - name: var-log
        hostPath:
          path: /var/log
      - name: netns
        hostPath:
          path: /var/run/netns
      - name: proc
        hostPath:
          path: /proc/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs
  namespace: mygraph
  annotations:
    guard.io/security-components: "[\"firewall\"]"
spec:
  selector:
    matchLabels:
      app: nodejs
  replicas: 1
  template:
    metadata:
      labels:
        app: nodejs
    spec:
      containers:
      - name: custom-service
        image: k8sfirewall/custom-service:new
        env:
        - name: APP_NAME
          value: "nodejs"
        - name: FONT_SIZE
          value: "regular"
        ports:
        - containerPort: 80
      - name: polycubed
        image: polycubenetwork/polycube:latest
        command: ["polycubed", "--loglevel=DEBUG", "--addr=0.0.0.0", "--logfile=/host/var/log/pcn_k8s"]
        volumeMounts:
        - name: lib-modules
          mountPath: /lib/modules
        - name: usr-src
          mountPath: /usr/src
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: var-log
          mountPath: /host/var/log
        securityContext:
          privileged: true
        ports:
          - name: polycubed
            containerPort: 9000
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: usr-src
        hostPath:
          path: /usr/src
      - name: cni-path
        hostPath:
          path: /opt/cni/bin
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
      - name: var-log
        hostPath:
          path: /var/log
      - name: netns
        hostPath:
          path: /var/run/netns
      - name: proc
        hostPath:
          path: /proc/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache
  namespace: mygraph
  annotations:
    guard.io/security-components: "[\"firewall\"]"
spec:
  selector:
    matchLabels:
      app: apache
  replicas: 1
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
      - name: custom-service
        image: k8sfirewall/custom-service:new
        env:
        - name: APP_NAME
          value: "apache"
        - name: FONT_SIZE
          value: "regular"
        ports:
        - containerPort: 8080
      - name: polycubed
        image: polycubenetwork/polycube:latest
        command: ["polycubed", "--loglevel=DEBUG", "--addr=0.0.0.0", "--logfile=/host/var/log/pcn_k8s"]
        volumeMounts:
        - name: lib-modules
          mountPath: /lib/modules
        - name: usr-src
          mountPath: /usr/src
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: var-log
          mountPath: /host/var/log
        securityContext:
          privileged: true
        ports:
          - name: polycubed
            containerPort: 9000
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: usr-src
        hostPath:
          path: /usr/src
      - name: cni-path
        hostPath:
          path: /opt/cni/bin
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
      - name: var-log
        hostPath:
          path: /var/log
      - name: netns
        hostPath:
          path: /var/run/netns
      - name: proc
        hostPath:
          path: /proc/