apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssh-server
  namespace: guard-kube
  annotations:
    guard.io/security-components: "[\"firewall\"]"
spec:
  selector:
    matchLabels:
      app: ssh-server
  replicas: 1
  template:
    metadata:
      labels:
        app: ssh-server
    spec:
      containers:
      # container - ssh-server
      - name: ssh-server
        image: guardproject/sshserver:latest
        ports:
        - containerPort: 22
        volumeMounts:
        - name: proc
          mountPath: /proc
        - name: cgroup
          mountPath: /sys/fs/cgroup
      # /container  - ssh-server

      # container - polycube
      - name: polycubed
        image: polycubenetwork/polycube:latest
        command: ["polycubed", "--loglevel=DEBUG", "--addr=0.0.0.0", "--logfile=/host/var/log/pcn_k8s"]
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "sleep 30; /usr/local/bin/polycubectl synflood add sf"]
        volumeMounts:
        - name: lib-modules
          mountPath: /lib/modules
        - name: usr-src
          mountPath: /usr/src
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: var-log
          mountPath: /host/var/log
        securityContext:
          privileged: true
        ports:
          - name: polycubed
            containerPort: 9000
        terminationMessagePolicy: FallbackToLogsOnError
      # /container  - polycube

      # container - cubebeat
      - name: cubebeat
        image: guardproject/cubebeat:latest
        env:
        - name: CUBEBEAT_GIT_URL
          value: "https://guard-token:2nsubUuUss8sQ-Mue_yN@gitlab.com/guard-repositories/cubebeat"
        - name: CUBEBEAT_ROOT
          value: "src/gitlab.com/guard-repositories/cubebeat"
        - name: LOGSTASH_HOST
          value: "localhost"
        - name: LOGSTASH_PORT
          value: "5044"
        - name: RELOAD_PERIOD
          value: "10s"
        - name: GOPATH
          value: "/root/go"
        - name: LOG_LEVEL
          value: "info"
        - name: FORCE_APT_UPGRADE_BOOT
          value: "no"
        - name: FORCE_REBUILD_BOOT
          value: "no"
        - name: USE_ENV_CONFIG_FILES
          value: "yes"
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: ssh-server-cubebeat-config
          mountPath: /root/go/src/gitlab.com/guard-repositories/cubebeat/config.d/
      # /container - cubebeat

      # container - metricbeat
      - name: metricbeat
        image: docker.elastic.co/beats/metricbeat:6.8.1
        args: ["-c", "/usr/share/metricbeat/config/metricbeat.yml"]
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: ssh-server-metricbeat-config
          mountPath: /usr/share/metricbeat/config/
        - name: ssh-server-metricbeat-modules
          mountPath: /usr/share/metricbeat/modules.d/
        - name: proc
          mountPath: /proc
        - name: cgroup
          mountPath: /sys/fs/cgroup
      # /container - metricbeat

      # container - logstash
      - name: logstash
        image: docker.elastic.co/logstash/logstash:6.8.1
        ports:
        - containerPort: 5044
        - containerPort: 5144
        volumeMounts:
          - name: ssh-server-logstash
            mountPath: /usr/share/logstash/config/
          - name: ssh-server-logstash-conf
            mountPath: /usr/share/logstash/pipeline/
      # /container - logstash

      initContainers:
      - name: copy
        image: busybox
        command: ["sh", "-c"]
        args:
        - "cp /ssh-server-cubebeat-config-data/* /ssh-server-cubebeat-config/;"
        - "cp /ssh-server-metricbeat-modules-data/* /ssh-server-metricbeat-modules/"
        volumeMounts:
        - name: ssh-server-cubebeat-config
          mountPath: /ssh-server-cubebeat-config
        - name: ssh-server-cubebeat-config-data
          mountPath: /ssh-server-cubebeat-config-data
        - name: ssh-server-metricbeat-modules
          mountPath: /ssh-server-metricbeat-modules
        - name: ssh-server-metricbeat-modules-data
          mountPath: /ssh-server-metricbeat-modules-data

      volumes:
      # volumes - ssh-server + polycube + metricbeat
      - name: proc
        hostPath:
          path: /proc
      # /volumes - ssh-server + polycube + metricbeat

      # volumes - ssh-server + metricbeat
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
      # /volumes - ssh-server + metricbeat

      # volumes - polycube
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: usr-src
        hostPath:
          path: /usr/src
      - name: cni-path
        hostPath:
          path: /opt/cni/bin
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
      - name: var-log
        hostPath:
          path: /var/log
      - name: netns
        hostPath:
          path: /var/run/netns
      # /volumes - polycube

      # volumes - cubebeat
      - name: ssh-server-cubebeat-config
        emptyDir: {}
      - name: ssh-server-cubebeat-config-data
        configMap:
          name: ssh-server-cubebeat
          items:
            - key: synflood.yml
              path: synflood.yml
      # /volumes - cubebeat

      # volumes - metricbeat
      - name: ssh-server-metricbeat-config
        configMap:
          name: ssh-server-metricbeat
          items:
          - key: metricbeat.yml
            path: metricbeat.yml
      - name: ssh-server-metricbeat-modules
        emptyDir: {}
      - name: ssh-server-metricbeat-modules-data
        configMap:
          name: ssh-server-metricbeat
          items:
          - key: system.yml
            path: system.yml
      # /volumes - metricbeat

      # volumes - logstash
      - name: ssh-server-logstash
        configMap:
          name: ssh-server-logstash
          items:
          - key: logstash.yml
            path: logstash.yml
          - key: pipelines.yml
            path: pipelines.yml
          - key: log4j2.properties
            path: log4j2.properties
      - name: ssh-server-logstash-conf
        configMap:
          name: ssh-server-logstash
          items:
          - key: ssh-server.conf
            path: ssh-server.conf
          - key: system.conf
            path: system.conf
      # /volumes - logstash
